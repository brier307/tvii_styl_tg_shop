from math import ceil
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Filter, CommandStart, Command
from app.admin_keyboards import *
from app.database.requests import get_all_orders, get_orders_by_status

from config import ADMIN

admin = Router()
ORDERS_PER_PAGE = 10  # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å –Ω–∞ –æ–¥–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ


class Admin(Filter):
    def __init__(self):
        self.admins = ADMIN

    async def __call__(self, message: Message):
        return message.from_user.id in self.admins
    

@admin.message(F.text == "/menu")
async def cmd_menu(message: Message):
    await message.answer('–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä!', reply_markup=get_admin_main_menu())


@admin.callback_query(F.data == "admin_main_menu")
async def show_admin_main_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    await callback.message.edit_text(
        "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
        reply_markup=get_admin_main_menu()
    )


@admin.callback_query(F.data == "admin_orders_menu")
async def show_orders_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é –∑–∞–º–æ–≤–ª–µ–Ω—å –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    await callback.message.edit_text(
        "–ú–µ–Ω—é –∑–∞–º–æ–≤–ª–µ–Ω—å:",
        reply_markup=get_orders_menu_keyboard()
    )


@admin.callback_query(F.data == "admin_all_orders")
async def show_all_orders(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    orders = await get_all_orders()

    if not orders:
        await callback.message.edit_text(
            "‚ùå –ù–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.",
            reply_markup=get_back_to_main_menu()
        )
        return

    total_pages = ceil(len(orders) / ORDERS_PER_PAGE)
    page = 1

    # –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    start = (page - 1) * ORDERS_PER_PAGE
    end = start + ORDERS_PER_PAGE
    orders_on_page = orders[start:end]

    keyboard = get_orders_keyboard(orders_on_page, page, total_pages)

    await callback.message.edit_text(
        "üì¶ –£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:",
        reply_markup=keyboard
    )


@admin.callback_query(F.data.startswith("admin_orders_page:"))
async def process_orders_pagination(callback: CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –ø–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö —É—Å—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å."""
    orders = await get_all_orders()
    total_pages = ceil(len(orders) / ORDERS_PER_PAGE)
    page = int(callback.data.split(":")[1])

    # –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    start = (page - 1) * ORDERS_PER_PAGE
    end = start + ORDERS_PER_PAGE
    orders_on_page = orders[start:end]

    keyboard = get_orders_keyboard(orders_on_page, page, total_pages)

    await callback.message.edit_text(
        "üì¶ –£—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:",
        reply_markup=keyboard
    )


@admin.callback_query(F.data == "admin_new_orders")
async def show_new_orders(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new'."""
    orders = await get_orders_by_status("new")

    if not orders:
        await callback.message.edit_text(
            "‚ùå –ù–µ–º–∞—î –∑–∞–º–æ–≤–ª–µ–Ω—å –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new'.",
            reply_markup=get_back_to_orders_menu()
        )
        return

    total_pages = ceil(len(orders) / ORDERS_PER_PAGE)
    page = 1

    # –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    start = (page - 1) * ORDERS_PER_PAGE
    end = start + ORDERS_PER_PAGE
    orders_on_page = orders[start:end]

    keyboard = get_orders_keyboard(orders_on_page, page, total_pages)

    await callback.message.edit_text(
        "üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new':",
        reply_markup=keyboard
    )


@admin.callback_query(F.data.startswith("admin_new_orders_page:"))
async def process_new_orders_pagination(callback: CallbackQuery):
    """–û–±—Ä–æ–±–ª—è—î –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é –ø–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∞—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new'."""
    orders = await get_orders_by_status("new")
    total_pages = ceil(len(orders) / ORDERS_PER_PAGE)
    page = int(callback.data.split(":")[1])

    # –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    start = (page - 1) * ORDERS_PER_PAGE
    end = start + ORDERS_PER_PAGE
    orders_on_page = orders[start:end]

    keyboard = get_orders_keyboard(orders_on_page, page, total_pages)

    await callback.message.edit_text(
        "üì¶ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new':",
        reply_markup=keyboard
    )

