import logging

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command, CommandObject

from app.user_keyboards import *

from app.database.requests import set_user
from app.database.products import ProductManager
from app.database.redis_cart import RedisCart

from app.database.products import ProductManager


product_manager = ProductManager("Stock.xls")

user = Router()
cart = RedisCart()


# –û–±–Ω–æ–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é format_cart_content –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
async def format_cart_content(user_cart: dict, user_id: int) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    Args:
        user_cart (dict): –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã
    """
    cart_items = []
    total_sum = 0
    invalid_items = []

    for article, quantity in user_cart.items():
        product_info = product_manager.get_product_info(article)
        if not product_info:
            invalid_items.append(article)
            continue

        name, price, available = product_info
        if available < quantity:
            invalid_items.append(article)
            continue

        item_total = price * quantity
        total_sum += item_total

        cart_items.append({
            'name': name,
            'article': article,
            'quantity': quantity,
            'price': price,
            'total': item_total,
            'available': available
        })

    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, —É–¥–∞–ª—è–µ–º –∏—Ö
    if invalid_items:
        for article in invalid_items:
            await cart.remove_item(user_id, article)

    # –ï—Å–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
    if not cart_items:
        return ("üõí –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π\n\n"
                "–í—Å—ñ —Ç–æ–≤–∞—Ä–∏ –≤–∏—è–≤–∏–ª–∏—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–º–∏ —ñ –±—É–ª–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ.")

    text = "üõí –í–∞—à –∫–æ—à–∏–∫:\n\n"

    for item in cart_items:
        text += (
            f"üì¶ {item['name']}\n"
            f"–ê—Ä—Ç–∏–∫—É–ª: {item['article']}\n"
            f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å: {item['quantity']} —à—Ç.\n"
            f"–¶—ñ–Ω–∞: {item['price']:.2f} –≥—Ä–Ω. x {item['quantity']} = {item['total']:.2f} –≥—Ä–Ω.\n"
            f"–î–æ—Å—Ç—É–ø–Ω–æ: {item['available']} —à—Ç.\n\n"
            f"–î–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –ø—ñ–¥ —Ç–æ–≤–∞—Ä–æ–º üëá\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
        )

    text += (
        f"üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {total_sum:.2f} –≥—Ä–Ω.\n\n"
        "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
    )

    return text
