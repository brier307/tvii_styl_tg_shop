# app/cart.py
import logging

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command, CommandObject

from app.user_keyboards import *

from app.database.requests import set_user
from app.database.products import ProductManager
from app.database.redis_cart import RedisCart

from app.database.products import ProductManager


product_manager = ProductManager()

user = Router()
cart = RedisCart()


async def format_cart_content(user_cart: dict, user_id: int) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    Args:
        user_cart (dict): –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {—à—Ç—Ä–∏—Ö-–∫–æ–¥: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ}.
    """
    cart_items = []
    total_sum = 0
    invalid_items = []

    for barcode, quantity in user_cart.items():
        product_info = await product_manager.get_product_info_by_barcode(barcode)
        if not product_info:
            invalid_items.append(barcode)
            continue

        name, price, available, article = product_info
        if available < quantity:
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ
            # –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å—á–∏—Ç–∞—Ç—å —Ç–æ–≤–∞—Ä –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
            invalid_items.append(barcode)
            continue

        item_total = price * quantity
        total_sum += item_total

        cart_items.append({
            'name': name,
            'barcode': barcode,
            'article': article,
            'quantity': quantity,
            'price': price,
            'total': item_total,
            'available': available
        })

    if invalid_items:
        for barcode in invalid_items:
            await cart.remove_item(user_id, barcode)
        # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω–∞ –æ–ø—É—Å—Ç–µ–ª–∞
        if not cart_items and invalid_items:
             return ("üõí –í–∞—à –∫–æ—à–∏–∫ –ø—É—Å—Ç–∏–π\n\n"
                "–î–µ—è–∫—ñ —Ç–æ–≤–∞—Ä–∏ –≤–∏—è–≤–∏–ª–∏—Å—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–∞ –±—É–ª–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ.")

    if not cart_items:
        return "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞"

    text = "üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:\n\n"
    for item in cart_items:
        text += (
            f"üì¶ {item['name']}\n"
            f"–ê—Ä—Ç–∏–∫—É–ª: {item['article']}\n"
            f"–®—Ç—Ä–∏—Ö-–∫–æ–¥: {item['barcode']}\n"
            f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å: {item['quantity']} —à—Ç.\n"
            f"–¶—ñ–Ω–∞: {item['price']:.2f} –≥—Ä–Ω. x {item['quantity']} = {item['total']:.2f} –≥—Ä–Ω.\n"
            f"–î–æ—Å—Ç—É–ø–Ω–æ: {item['available']} —à—Ç.\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n\n"
        )
    text += f"üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–º–∞: {total_sum:.2f} –≥—Ä–Ω.\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
    return text

